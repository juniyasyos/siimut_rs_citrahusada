name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PHP_VERSION: '8.3'
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: siimut
  DB_USERNAME: user
  DB_PASSWORD: password
  REDIS_HOST: 127.0.0.1
  REDIS_PORT: 6379
  QUEUE_CONNECTION: redis

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, bcmath, pdo, pdo_mysql, redis
        tools: composer, phpstan, phpunit

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache/files
        key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          composer-${{ runner.os }}-

    - name: Copy .env example
      run: cp .env.example .env

    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Execute post-install scripts
      run: composer run post-root-package-install

    - name: Generate Application Key
      run: php artisan key:generate --ansi

    - name: Setup Environment Variables
      run: |
        sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=${{ env.DB_CONNECTION }}/' .env
        sed -i 's/^DB_HOST=.*/DB_HOST=${{ env.DB_HOST }}/' .env
        sed -i 's/^DB_PORT=.*/DB_PORT=${{ env.DB_PORT }}/' .env
        sed -i 's/^DB_DATABASE=.*/DB_DATABASE=${{ env.DB_DATABASE }}/' .env
        sed -i 's/^DB_USERNAME=.*/DB_USERNAME=${{ env.DB_USERNAME }}/' .env
        sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=${{ env.DB_PASSWORD }}/' .env
        sed -i 's/^REDIS_HOST=.*/REDIS_HOST=${{ env.REDIS_HOST }}/' .env
        sed -i 's/^REDIS_PORT=.*/REDIS_PORT=${{ env.REDIS_PORT }}/' .env
        sed -i 's/^QUEUE_CONNECTION=.*/QUEUE_CONNECTION=${{ env.QUEUE_CONNECTION }}/' .env

    - name: Wait for Services to be Ready
      run: |
        echo "Waiting for MySQL and Redis to be ready..."
        until mysqladmin ping -h"${{ env.DB_HOST }}" --silent; do
          sleep 2
        done
        until (echo PING | nc -w 1 ${{ env.REDIS_HOST }} ${{ env.REDIS_PORT }}) do
          sleep 2
        done
        echo "MySQL and Redis are up and running!"

    - name: Optimize Application
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Run Migrations & Seeders
      run: php artisan migrate --force --seed

    - name: Set Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Laravel Queue Worker
      run: nohup php artisan queue:work --tries=3 &

    # - name: Run Laravel Tests (Unit)
    #   env:
    #     DB_CONNECTION: ${{ env.DB_CONNECTION }}
    #     DB_HOST: ${{ env.DB_HOST }}
    #     DB_PORT: ${{ env.DB_PORT }}
    #     DB_DATABASE: ${{ env.DB_DATABASE }}
    #     DB_USERNAME: ${{ env.DB_USERNAME }}
    #     DB_PASSWORD: ${{ env.DB_PASSWORD }}
    #     REDIS_HOST: ${{ env.REDIS_HOST }}
    #     REDIS_PORT: ${{ env.REDIS_PORT }}
    #   run: php artisan test --testsuite=Unit

    # - name: Run Laravel Tests (Feature)
    #   env:
    #     DB_CONNECTION: ${{ env.DB_CONNECTION }}
    #     DB_HOST: ${{ env.DB_HOST }}
    #     DB_PORT: ${{ env.DB_PORT }}
    #     DB_DATABASE: ${{ env.DB_DATABASE }}
    #     DB_USERNAME: ${{ env.DB_USERNAME }}
    #     DB_PASSWORD: ${{ env.DB_PASSWORD }}
    #     REDIS_HOST: ${{ env.REDIS_HOST }}
    #     REDIS_PORT: ${{ env.REDIS_PORT }}
    #   run: php artisan test --testsuite=Feature
