<?php

namespace {{ namespace }};

{{ clusterImport }}use {{ resource }}\Pages;
use {{ resource }}\RelationManagers;
use {{ model }};
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\BaseResource;
use Filament\Tables;
use Filament\Tables\Table;
use Filament\Tables\Filters\TrashedFilter;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Filament\Tables\Actions\ViewAction;
use Filament\Tables\Actions\EditAction;
use Filament\Tables\Actions\DeleteAction;
use Filament\Tables\Actions\RestoreAction;
use Filament\Tables\Actions\ForceDeleteAction;

class {{ resourceClass }} extends BaseResource
{
    protected static ?string $model = {{ modelClass }}::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
{{ formSchema }}
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
{{ tableColumns }}
            ])
            ->filters([
                TrashedFilter::make(),
{{ tableFilters }}
            ])
            ->actions([
                ViewAction::make(),
                EditAction::make(),
                DeleteAction::make(),
                RestoreAction::make()->visible(fn (Model $record) => method_exists($record, 'trashed') && $record->trashed()),
                ForceDeleteAction::make()->visible(fn (Model $record) => method_exists($record, 'trashed') && $record->trashed()),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    DeleteAction::make(),
                    RestoreAction::make(),
                    ForceDeleteAction::make(),
{{ tableBulkActions }}
                ]),
            ]);
    }

    public static function getGloballySearchableAttributes(): array
    {
        return []; // Sesuaikan di masing-masing resource
    }

    public static function getGlobalSearchResultTitle(Model $record): string
    {
        return (string) $record->getKey();
    }

    public static function getGlobalSearchResultDetails(Model $record): array
    {
        return [];
    }

    public static function getGlobalSearchResultUrl(Model $record): ?string
    {
        return route('filament.admin.resources.{{ resourceSlug }}.edit', $record);
    }

{{ relations }}

    public static function getPages(): array
    {
        return [
            'index' => Pages\List{{ resourceClass }}::route('/'),
            'create' => Pages\Create{{ resourceClass }}::route('/create'),
            'edit' => Pages\Edit{{ resourceClass }}::route('/{record}/edit'),
        ];
    }

{{ eloquentQuery }}
}
