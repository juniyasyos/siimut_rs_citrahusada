<?php

namespace {{ namespace }};

{{ clusterImport }}
use {{ resource }}\Pages;
use {{ resource }}\RelationManagers;
use {{ model }};
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Filament\Tables\Filters\TrashedFilter;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Filament\Tables\Actions\{EditAction, ViewAction, DeleteAction, RestoreAction, ForceDeleteAction};
use Filament\Tables\Actions\{BulkActionGroup, DeleteBulkAction, RestoreBulkAction, ForceDeleteBulkAction};

class {{ resourceClass }} extends Resource
{
    protected static ?string $model = {{ modelClass }}::class;
    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function getGloballySearchableAttributes(): array
    {
        return {{ globalSearchableAttributes }};
    }

    public static function getGlobalSearchResultDetails(Model $record): array
    {
        return {{ globalSearchResultDetails }};
    }

    public static function getGlobalSearchResultTitle(Model $record): string
    {
        return $record->{{ globalSearchTitleField }} ?? '';
    }

    public static function getGlobalSearchResultUrl(Model $record): ?string
    {
        return route('{{ globalSearchUrlRoute }}', $record);
    }

    public static function getPermissionPrefixes(): array
    {
        return array_merge([
            'view', 'view_any', 'create', 'update', 'restore', 'restore_any',
            'replicate', 'reorder', 'delete', 'delete_any', 'force_delete', 'force_delete_any',
        ]);
    }

    public static function getLabel(): ?string
    {
        return __('{{ singularLabel }}');
    }

    public static function getPluralLabel(): ?string
    {
        return __('{{ pluralLabel }}');
    }

    public static function getNavigationGroup(): ?string
    {
        return __('{{ navigationGroup }}');
    }

    public static function form(Form $form): Form
    {
        return $form->schema([{{ formSchema }}]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([{{ tableColumns }}])
            ->filters([
                TrashedFilter::make(),
                {{ tableFilters }}
            ])
            ->actions([
                ViewAction::make(),
                EditAction::make(),
                DeleteAction::make(),
                RestoreAction::make()->visible(fn (Model $record) => method_exists($record, 'trashed') && $record->trashed()),
                ForceDeleteAction::make()->visible(fn (Model $record) => method_exists($record, 'trashed') && $record->trashed()),
            ])
            ->bulkActions([
                BulkActionGroup::make([
                    DeleteBulkAction::make(),
                    RestoreBulkAction::make(),
                    ForceDeleteBulkAction::make(),
                    {{ tableBulkActions }}
                ]),
            ]);
    }

    {{ relations }}

    public static function getPages(): array
    {
        return [
            'index' => Pages\List{{ resourceClass }}::route('/'),
            'create' => Pages\Create{{ resourceClass }}::route('/create'),
            'edit' => Pages\Edit{{ resourceClass }}::route('/{record}/edit'),
        ];
    }

    {{ eloquentQuery }}
}
